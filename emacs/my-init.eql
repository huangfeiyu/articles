(tool-bar-mode -1)
(menu-bar-mode -1)
(cua-mode 1)
(global-set-key (kbd "C-x v") nil)

(require 'package)
(setq package-archives '(
                         ;; ("gnu"   . "https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/")
                         ;; ("melpa" . "https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/")
                         ;;("melpa-stable" . "http://elpa.emacs-china.org/melpa-stable/")
                         ("gnu" . "http://elpa.emacs-china.org/gnu/")
                         ("melpa" . "http://elpa.emacs-china.org/melpa/")
                         ))
(package-initialize)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#1c1e1f" "#e74c3c" "#b6e63e" "#e2c770" "#268bd2" "#fb2874" "#66d9ef" "#d6d6d4"])
 '(company-dabbrev-downcase nil)
 '(company-dabbrev-ignore-case t)
 '(custom-enabled-themes '(doom-molokai))
 '(custom-safe-themes
   '("b0e446b48d03c5053af28908168262c3e5335dcad3317215d9fdeb8bac5bacf9" "e19ac4ef0f028f503b1ccafa7c337021834ce0d1a2bca03fcebc1ef635776bea" "0466adb5554ea3055d0353d363832446cd8be7b799c39839f387abb631ea0995" default))
 '(dap-java-default-debug-port 11550)
 '(dired-dwim-target t)
 '(doc-view-continuous t)
 '(doc-view-resolution 100)
 '(dumb-jump-ignore-context t)
 '(ediff-diff-options "-w")
 '(ediff-diff-program "diff")
 '(ediff-show-ancestor t)
 '(ediff-split-window-function 'split-window-horizontally)
 '(ediff-window-setup-function 'ediff-setup-windows-plain)
 '(eww-search-prefix "https://cn.bing.com/search?ensearch=1&q=")
 '(exwm-floating-border-color "#323435")
 '(fci-rule-color "#555556")
 '(global-tab-line-mode t)
 '(helm-completion-style 'helm)
 '(highlight-tail-colors
   ((("#2b3222" "#b6e63e" "green")
     . 0)
    (("#233033" "#66d9ef" "brightcyan")
     . 20)))
 '(indent-tabs-mode nil)
 '(jdee-db-active-breakpoint-face-colors (cons "#1B2229" "#fd971f"))
 '(jdee-db-requested-breakpoint-face-colors (cons "#1B2229" "#b6e63e"))
 '(jdee-db-spec-breakpoint-face-colors (cons "#1B2229" "#525254"))
 '(lsp-file-watch-threshold 40000)
 '(lsp-headerline-breadcrumb-enable nil)
 '(lsp-ui-sideline-show-code-actions nil)
 '(magit-diff-use-overlays nil)
 '(objed-cursor-color "#e74c3c")
 '(org-hide-emphasis-markers t)
 '(org-startup-indented t)
 '(package-selected-packages
   '(lua-mode lsp-java lsp-ui lsp-mode nov crux ereader ox-epub helm-xref helm-ag helm-projectile helm hydra projectile lsp-ivy ivy dumb-jump typescript-mode zenburn-theme yasnippet which-key web-mode use-package spacemacs-theme pdf-tools org-superstar magit js2-mode flycheck flow-minor-mode expand-region doom-themes company atom-one-dark-theme))
 '(pdf-view-midnight-colors (cons "#d6d6d4" "#1c1e1f"))
 '(require-final-newline nil)
 '(rustic-ansi-faces
   ["#1c1e1f" "#e74c3c" "#b6e63e" "#e2c770" "#268bd2" "#fb2874" "#66d9ef" "#d6d6d4"])
 '(shr-inhibit-images t t)
 '(url-proxy-services '(("https" . "192.168.100.29:16823")))
 '(vc-annotate-background "#1c1e1f")
 '(vc-annotate-color-map
   (list
    (cons 20 "#b6e63e")
    (cons 40 "#c4db4e")
    (cons 60 "#d3d15f")
    (cons 80 "#e2c770")
    (cons 100 "#ebb755")
    (cons 120 "#f3a73a")
    (cons 140 "#fd971f")
    (cons 160 "#fc723b")
    (cons 180 "#fb4d57")
    (cons 200 "#fb2874")
    (cons 220 "#f43461")
    (cons 240 "#ed404e")
    (cons 260 "#e74c3c")
    (cons 280 "#c14d41")
    (cons 300 "#9c4f48")
    (cons 320 "#77504e")
    (cons 340 "#555556")
    (cons 360 "#555556")))
 '(vc-annotate-very-old-color nil)
 '(web-mode-code-indent-offset 4)
 '(web-mode-enable-auto-expanding t)
 '(web-mode-enable-auto-indentation nil)
 '(web-mode-enable-control-block-indentation nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; lsp-java configuration start
;; (setenv "JAVA_HOME"  "/usr/local/jdk1.8.0_202")
(setenv "LSP_USE_PLISTS"  "true")
(condition-case nil
    (require 'use-package)
  (file-error
   (require 'package)
   ;; (add-to-list 'package-archives '("melpa" . "https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/"))
   (add-to-list 'package-archives '("melpa" . "http://elpa.emacs-china.org/melpa/"))
   (package-initialize)
   (package-refresh-contents)
   (package-install 'use-package)
   (require 'use-package)))
(setq use-package-always-ensure t)
(use-package projectile)
(use-package flycheck)
(use-package yasnippet :config (yas-global-mode))
(use-package lsp-mode :hook ((lsp-mode . lsp-enable-which-key-integration))
  ;;:config (setq lsp-completion-enable-additional-text-edit nil)
  )
(use-package hydra)
(use-package company)
(use-package lsp-ui)
(use-package which-key :config (which-key-mode))
(use-package lsp-java :config (add-hook 'java-mode-hook 'lsp))
(use-package dap-mode :after lsp-mode :config (dap-auto-configure-mode))
(use-package dap-java :ensure nil)
(use-package helm
  :config (helm-mode))
(use-package helm-projectile)
(use-package helm-ag)
(use-package lsp-treemacs)
;; customization
(with-eval-after-load 'lsp-mode
  ;; don't scan 3rd party javascript libraries
  (push "[/\\\\][^/\\\\]*\\.\\(json\\|html\\|jade\\)$" lsp-file-watch-ignored) ; json
  (push "/target/.*" lsp-file-watch-ignored) ; target
  (push "/node/.*" lsp-file-watch-ignored) ; node
  (push "/node_modules/.*" lsp-file-watch-ignored) ; node
  (push ".*/vendors/.*" lsp-file-watch-ignored) ; node
  (push ".*\\.min\\.js$" lsp-file-watch-ignored) ; node
  (push ".*/main/webpack/.*" lsp-file-watch-ignored) ; node webpack
  )
;; (setq lsp-java-java-path "/usr/local/jdk1.8.0_202/bin/java")
(setq lsp-java-java-path "/usr/bin/java")
(setq lsp-java-configuration-runtimes '[(:name "JavaSE-1.8"
						                       :path "/usr/local/jdk1.8.0_202" :default t)
                                      (:name "JavaSE-11" :path "/usr/lib/jvm/java-11-openjdk-amd64")
					])
;; current VSCode defaults
(setq lsp-java-vmargs '("-XX:+UseParallelGC" "-XX:GCTimeRatio=4" "-XX:AdaptiveSizePolicyWeight=90" "-Dsun.zip.disableMemoryMapping=true" "-Xmx2G" "-Xms100m"))
(setq lsp-java-autobuild-enabled nil)
(setq gc-cons-threshold 200000000)
(setq read-process-output-max (* 3072 1024)) ;; 3mb
(setq lsp-idle-delay 0.500)
;; (add-hook 'dap-stopped-hook (lambda (arg) (call-interactively #'dap-hydra)))
(add-hook 'dap-mode-hook (lambda () (local-set-key (kbd "M-i") 'dap-step-in)))
(add-hook 'dap-mode-hook (lambda () (local-set-key (kbd "M-o") 'dap-step-out)))
(add-hook 'dap-mode-hook (lambda () (local-set-key (kbd "M-c") 'dap-continue)))
(add-hook 'dap-mode-hook (lambda () (local-set-key (kbd "M-n") 'dap-next)))
(add-hook 'java-mode-hook (lambda () (local-unset-key (kbd "M-n"))))
(add-hook 'dap-mode-hook (lambda () (local-set-key (kbd "M-q") 'dap-disconnect)))
(add-hook 'java-mode-hook (lambda () (local-set-key (kbd "<M-return>") 'lsp-execute-code-action)))
(add-hook 'java-mode-hook (lambda () (local-set-key (kbd "<M-down>") 'lsp-ui-find-next-reference)))
(add-hook 'java-mode-hook (lambda () (local-set-key (kbd "<M-up>") 'lsp-ui-find-prev-reference)))
;; (dap-register-debug-template
;;   "Java Attach"
;;   (list :name "Java Attach"
;;         :type "java"
;;         :request "attach"
;;         :hostName "localhost"
;;         :projectName "jdt.ls-java-project"
;;         :port 11550))
;; lsp-java configuration end
(use-package markdown-mode
  :ensure t
  :mode ("README\\.md\\'" . gfm-mode)
  :init (setq markdown-command "multimarkdown"))
(use-package org-superstar)
(use-package magit)
(use-package avy)
(projectile-mode +1)
(define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)
(add-hook 'after-init-hook 'global-company-mode)

(setq-default tab-width 4)
(global-set-key [remap dabbrev-expand] 'hippie-expand)
(global-set-key (kbd "C-x g") 'magit-status)
(global-set-key (kbd "C-c g") 'magit-file-dispatch)
(global-set-key (kbd "C-o") 'helm-projectile)
(global-set-key (kbd "C-j") 'avy-goto-word-1)
(global-set-key (kbd "C-S-n") 'helm-projectile-ag)
(global-set-key (kbd "C-S-i") 'helm-imenu)
(global-set-key (kbd "C-S-s") 'helm-occur)
(global-set-key (kbd "C-S-v") 'scroll-down-command)
(global-set-key (kbd "C-S-c") 'scroll-up-command)
(global-set-key (kbd "<f5>") 'revert-buffer)
(global-set-key (kbd "C-M-i") 'company-complete)

(use-package web-mode)
(add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.jspf\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.tag\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.xhtml\\'" . web-mode))
(setq web-mode-engines-alist
      '(("jsp"    . "\\.jspf\\'"))
      )
(add-hook 'web-mode-hook (lambda () (web-mode-toggle-current-element-highlight)))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-M-e") 'web-mode-element-end )))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-M-a") 'web-mode-element-beginning )))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-c e s") 'web-mode-element-select )))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-c e a") 'web-mode-element-content-select )))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-M-u") 'web-mode-element-parent )))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-M-d") 'web-mode-element-child )))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-M-p") 'web-mode-element-previous )))
(add-hook 'web-mode-hook (lambda () (local-set-key (kbd "C-M-n") 'web-mode-element-next )))

(use-package js2-mode)
(add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))

(show-paren-mode 1)
(electric-pair-mode 1)
(global-set-key (kbd "M-o") 'ace-window)

(global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
    (global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
    (global-set-key (kbd "S-C-<down>") 'shrink-window)
    (global-set-key (kbd "S-C-<up>") 'enlarge-window)

(desktop-save-mode 1)
(setq shr-inhibit-images t)
(global-set-key (kbd "C-c l") 'org-store-link)
(global-set-key (kbd "C-c a") 'org-agenda)
(global-set-key (kbd "C-c c") 'org-capture)
(setq org-todo-keywords
            '((sequence "TODO" "DOING" "|" "DONE" "DELEGATED")))
(setq org-log-done 'time)
(setq org-todo-keyword-faces
      '(("DOING" . "green")))
(setq-default cursor-type 'bar)

;; tabnine setting
;; (use-package company-tabnine :ensure t)
;; (add-to-list 'company-backends #'company-tabnine)
;; Trigger completion immediately.
;; (setq company-idle-delay 0)
;; end tabnine setting.

(use-package expand-region)
(use-package pdf-tools)
(use-package doom-themes)
(use-package typescript-mode)
(use-package lua-mode)
(use-package crux)
(use-package nov)
(add-to-list 'auto-mode-alist '("\\.epub\\'" . nov-mode))
(global-set-key (kbd "C-=") 'er/expand-region)

(global-set-key (kbd "s-j j") 'dap-debug)
(global-set-key (kbd "s-j l") 'dap-debug-last)
(global-set-key (kbd "s-j h") 'dap-hydra)
(global-set-key (kbd "C-x C-b") 'ibuffer)
(global-set-key (kbd "C-c h") 'helm-command-prefix)
(global-unset-key (kbd "C-x c"))
(global-set-key (kbd "C-x C-f") 'helm-find-files)
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "s-k") 'crux-kill-other-buffers)
(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)

(add-hook 'java-mode-hook 'display-line-numbers-mode)
(add-hook 'web-mode-hook 'display-line-numbers-mode)
(add-hook 'lua-mode-hook 'display-line-numbers-mode)
(add-hook 'lua-mode-hook (lambda () (local-set-key (kbd "<M-down>") 'lsp-ui-find-next-reference)))
(add-hook 'lua-mode-hook (lambda () (local-set-key (kbd "<M-up>") 'lsp-ui-find-prev-reference)))
(add-hook 'lua-mode-hook (lambda () (local-set-key (kbd "C-M-=") 'lua-goto-matching-block)))
(add-hook 'org-mode-hook (lambda () (visual-line-mode 1)))
(add-hook 'org-mode-hook (lambda () (org-superstar-mode 1)))
(add-hook 'js2-mode-hook #'lsp-deferred)
(add-hook 'js2-mode-hook (lambda () (local-set-key (kbd "<M-down>") 'lsp-ui-find-next-reference)))
(add-hook 'js2-mode-hook (lambda () (local-set-key (kbd "<M-up>") 'lsp-ui-find-prev-reference)))
(add-hook 'typescript-mode-hook #'lsp-deferred)
(add-hook 'typescript-mode-hook (lambda () (local-set-key (kbd "<M-down>") 'lsp-ui-find-next-reference)))
(add-hook 'typescript-mode-hook (lambda () (local-set-key (kbd "<M-up>") 'lsp-ui-find-prev-reference)))
(add-hook 'lua-mode-hook #'lsp-deferred)
(pdf-loader-install)

;; Ask for y/n instead of yes/no
(defalias 'yes-or-no-p 'y-or-n-p)
